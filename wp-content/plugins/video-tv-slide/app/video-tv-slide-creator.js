/** Wonderplugin Gallery Plugin Free Version
 * Copyright 2015 Magic Hills Pty Ltd All Rights Reserved
 * Website: http://www.wonderplugin.com
 * Version 10.8 
 */
(function ($) {
    $(document).ready(function () {
        $(".wonderplugin-engine").css({ display: "none" }); $(document).on("click", ".wonderplugin-dialog-tab-button", function () {
            if ($(this).hasClass("wonderplugin-dialog-tab-button-selected")) return; var index = $(this).index(); $(this).closest(".wonderplugin-dialog-tab-buttons").find("li").removeClass("wonderplugin-dialog-tab-button-selected"); $(this).addClass("wonderplugin-dialog-tab-button-selected"); var panelsID = $(this).closest(".wonderplugin-dialog-tab-buttons").data("panelsid");
            $("#" + panelsID).children("li").removeClass("wonderplugin-dialog-tab-panel-selected"); $("#" + panelsID).children("li").eq(index).addClass("wonderplugin-dialog-tab-panel-selected")
        }); $("#video-tv-slide-toolbar").find("li").each(function (index) {
            $(this).click(function () {
                if ($(this).hasClass("wonderplugin-tab-buttons-selected")) return; $(this).parent().find("li").removeClass("wonderplugin-tab-buttons-selected"); if (!$(this).hasClass("laststep")) $(this).addClass("wonderplugin-tab-buttons-selected"); $("#video-tv-slide-tabs").children("li").removeClass("wonderplugin-tab-selected");
                $("#video-tv-slide-tabs").children("li").eq(index).addClass("wonderplugin-tab-selected"); if (index == 3) previewGallery(); else if (index == 4) publishGallery()
            })
        }); $(".wonderplugin-tab-buttons-horizontal").each(function () {
            var index = $.wpgalleryCookie($(this).attr("id")); if (index >= 0) {
                $(this).children("li").removeClass("wonderplugin-tab-button-horizontal-selected"); $(this).children("li").eq(index).addClass("wonderplugin-tab-button-horizontal-selected"); var panelsID = $(this).data("panelsid"); $("#" + panelsID).children("li").removeClass("wonderplugin-tab-horizontal-selected");
                $("#" + panelsID).children("li").eq(index).addClass("wonderplugin-tab-horizontal-selected")
            } $(this).find("li").each(function (index) {
                $(this).click(function () {
                    if ($(this).hasClass("wonderplugin-tab-button-horizontal-selected")) return; $(this).parent().find("li").removeClass("wonderplugin-tab-button-horizontal-selected"); $(this).addClass("wonderplugin-tab-button-horizontal-selected"); var panelsID = $(this).parent().data("panelsid"); $("#" + panelsID).children("li").removeClass("wonderplugin-tab-horizontal-selected");
                    $("#" + panelsID).children("li").eq(index).addClass("wonderplugin-tab-horizontal-selected"); $.wpgalleryCookie($(this).parent().attr("id"), index)
                })
            })
        }); $(document).on("click", ".wonderplugin-foldername", function () {
            var parent = $(this).closest(".wonderplugin-foldername-item"); if (parent.hasClass("wonderplugin-folder-opened")) { parent.removeClass("wonderplugin-folder-opened"); $(".wonderplugin-foldername-list", parent).remove(); return false } else parent.addClass("wonderplugin-folder-opening"); var ajaxnonce = $("#video-tv-slide-ajaxnonce").text();
            var folderseperator = $("#video-tv-slide-folderseperator").text(); var folder = $(this).data("foldername"); var inst = $(this); $("#wonderplugin-folder-selected").html(folder); jQuery.ajax({
                url: ajaxurl, type: "POST", data: { action: "video_tv_slide_list_folder", nonce: ajaxnonce, foldername: folder }, success: function (data) {
                    parent.addClass("wonderplugin-folder-opened"); if (data && data.length > 0) {
                        var listcode = '<ul class="wonderplugin-foldername-list">'; for (var i = 0; i < data.length; i++)listcode += '<li class="wonderplugin-foldername-item wonderplugin-folder"><a class="wonderplugin-foldername" href="#" data-foldername="' +
                            folder + folderseperator + data[i] + '">' + data[i] + "</a></li>"; listcode += "</ul>"; inst.append(listcode)
                    }
                }, error: function () { }, complete: function () { parent.removeClass("wonderplugin-folder-opening") }
            }); return false
        }); var getURLParams = function (href) { var result = {}; if (href.indexOf("?") < 0) return result; var params = href.substring(href.indexOf("?") + 1).split("&"); for (var i = 0; i < params.length; i++) { var value = params[i].split("="); if (value && value.length == 2 && value[0].toLowerCase() != "v") result[value[0].toLowerCase()] = value[1] } return result };
        var addMediaToList = function (data) { if ($("#wonderplugin-newestfirst").is(":checked")) video_tv_slide_config.slides.unshift(data); else video_tv_slide_config.slides.push(data) }; var slideDialog = function (dialogType, onSuccess, data, dataIndex) {
            var dialogTitle = ["image", "video", "Youtube Video", "Vimeo Video", "Dailymotion Video", "Iframe Video"]; var dialogCode = "<div class='wonderplugin-dialog-container'>" + "<div class='wonderplugin-dialog-bg'></div>" + "<div class='wonderplugin-dialog'>" + "<h3 id='wonderplugin-dialog-title'></h3>" +
                "<div class='error' id='wonderplugin-dialog-error' style='display:none;'></div>" + "<table id='wonderplugin-dialog-form'>"; if (dialogType == 2 || dialogType == 3 || dialogType == 4 || dialogType == 5) {
                    dialogCode += "<tr><th>" + dialogTitle[dialogType] + " URL</th><td><input name='wonderplugin-dialog-video' type='text' id='wonderplugin-dialog-video' value='' class='regular-text' />"; if (dialogType == 2 || dialogType == 3 || dialogType == 4) dialogCode += " or <input type='button' class='button' id='wonderplugin-dialog-select-video' value='Enter' />";
                    dialogCode += "</td></tr>"
                } dialogCode += "<tr>" + "<th>" + (dialogType > 0 ? "Poster " : "") + "Image URL</th>" + "<td><input name='wonderplugin-dialog-image' type='text' id='wonderplugin-dialog-image' value='' class='regular-text' /> or <input type='button' class='button' data-textid='wonderplugin-dialog-image' id='wonderplugin-dialog-select-image' value='Upload' /></td>" + "</tr>" + "<tr id='wonderplugin-dialog-image-display-tr' style='display:none;'>" + "<th></th>" + "<td><img id='wonderplugin-dialog-image-display' style='width:80px;height:80px;' /></td>" +
                    "</tr>" + "<tr>" + "<th>Thumbnail URL</th>" + "<td><input name='wonderplugin-dialog-thumbnail' type='text' id='wonderplugin-dialog-thumbnail' value='' class='regular-text' /> or <input type='button' class='button' data-textid='wonderplugin-dialog-thumbnail' id='wonderplugin-dialog-select-thumbnail' value='Upload' /></td>" + "</tr>"; if (dialogType == 1) dialogCode += "<tr>" + "<th>MP4 video URL</th>" + "<td><input name='wonderplugin-dialog-mp4' type='text' id='wonderplugin-dialog-mp4' value='' class='regular-text' /> or <input type='button' class='button' data-textid='wonderplugin-dialog-mp4' id='wonderplugin-dialog-select-mp4' value='Upload' /></td>" +
                        "</tr>" + "<tr>" + "<th>High quality MP4 video URL (Optional)</th>" + "<td><input name='wonderplugin-dialog-hdmp4' type='text' id='wonderplugin-dialog-hdmp4' value='' class='regular-text' /> or <input type='button' class='button' data-textid='wonderplugin-dialog-hdmp4' id='wonderplugin-dialog-select-hdmp4' value='Upload' /></td>" + "</tr>" + "<tr>" + "<th>WebM video URL (Optional)</th>" + "<td><input name='wonderplugin-dialog-webm' type='text' id='wonderplugin-dialog-webm' value='' class='regular-text' /> or <input type='button' class='button' data-textid='wonderplugin-dialog-webm' id='wonderplugin-dialog-select-webm' value='Upload' /></td>" +
                        "</tr>" + "<tr>" + "<th>High quality WebM video URL (Optional)</th>" + "<td><input name='wonderplugin-dialog-hdwebm' type='text' id='wonderplugin-dialog-hdwebm' value='' class='regular-text' /> or <input type='button' class='button' data-textid='wonderplugin-dialog-hdwebm' id='wonderplugin-dialog-select-hdwebm' value='Upload' /></td>" + "</tr>"; dialogCode += "<tr>" + "<th>Title</th>" + "<td><input name='wonderplugin-dialog-image-title' type='text' id='wonderplugin-dialog-image-title' value='' class='large-text' /></td>" +
                            "</tr>" + "<tr>" + "<th>Description</th>" + "<td><textarea name='wonderplugin-dialog-image-description' type='' id='wonderplugin-dialog-image-description' value='' class='large-text' /></td>" + "</tr>" + "<tr>" + "<th>Img alt text</th>" + "<td><label><input name='wonderplugin-dialog-image-altusetitle' type='checkbox' id='wonderplugin-dialog-image-altusetitle' checked /> Use Title as img alt text. To use a different text, uncheck the option and enter it below:  </label><br><input name='wonderplugin-dialog-image-alt' type='text' id='wonderplugin-dialog-image-alt' value='' class='large-text' disabled /></td>" +
                            "</tr>"; if (dialogType == 0 || dialogType == 1) dialogCode += "<tr><th>Click to open web link</th>" + "<td>" + "<input name='wonderplugin-dialog-weblink' type='text' id='wonderplugin-dialog-weblink' value='' class='regular-text' />" + "</td>" + "</tr>" + "<tr><th>Set web link target</th>" + "<td>" + "<input name='wonderplugin-dialog-linktarget' type='text' id='wonderplugin-dialog-linktarget' value='' class='regular-text' />" + "</td>" + "</tr>"; dialogCode += "</table>" + "<div class='wonderplugin-dialog-buttons'>" + "<input type='button' class='button button-primary' id='wonderplugin-dialog-ok' value='OK' />" +
                                "<input type='button' class='button' id='wonderplugin-dialog-cancel' value='Cancel' />" + "</div>" + "</div>" + "</div>"; var $slideDialog = $(dialogCode); $("body").append($slideDialog); $(".wonderplugin-dialog").css({ "margin-top": String($(document).scrollTop() + 60) + "px" }); $(".wonderplugin-dialog-bg").css({ height: $(document).height() + "px" }); $("#wonderplugin-dialog-title").html("Add " + dialogTitle[dialogType]); $("#wonderplugin-dialog-image-altusetitle").click(function () {
                                    $("#wonderplugin-dialog-image-alt").attr("disabled",
                                        $(this).is(":checked"))
                                }); if (data) {
                                    if (dialogType == 2 || dialogType == 3 || dialogType == 4 || dialogType == 5) $("#wonderplugin-dialog-video").val(data.video); $("#wonderplugin-dialog-image").val(data.image); if (data.image) { $("#wonderplugin-dialog-image-display-tr").css({ display: "table-row" }); $("#wonderplugin-dialog-image-display").attr("src", data.image) } $("#wonderplugin-dialog-thumbnail").val(data.thumbnail); $("#wonderplugin-dialog-image-title").val(data.title); $("#wonderplugin-dialog-image-description").val(data.description);
                                    $("#wonderplugin-dialog-image-altusetitle").attr("checked", data.altusetitle); $("#wonderplugin-dialog-image-alt").val(data.alt); $("#wonderplugin-dialog-image-alt").attr("disabled", data.altusetitle); if (dialogType == 1) { $("#wonderplugin-dialog-mp4").val(data.mp4); $("#wonderplugin-dialog-hdmp4").val(data.hdmp4); $("#wonderplugin-dialog-webm").val(data.webm); $("#wonderplugin-dialog-hdwebm").val(data.hdwebm) } if (dialogType == 0 || dialogType == 1) { $("#wonderplugin-dialog-weblink").val(data.weblink); $("#wonderplugin-dialog-linktarget").val(data.linktarget) }
                                } if (dialogType ==
                                    2 || dialogType == 3 || dialogType == 4) $("#wonderplugin-dialog-select-video").click(function () {
                                        var videoData = { type: dialogType, video: $.trim($("#wonderplugin-dialog-video").val()), image: $.trim($("#wonderplugin-dialog-image").val()), thumbnail: $.trim($("#wonderplugin-dialog-thumbnail").val()), title: $.trim($("#wonderplugin-dialog-image-title").val()), description: $.trim($("#wonderplugin-dialog-image-description").val()), altusetitle: $("#wonderplugin-dialog-image-altusetitle").is(":checked"), alt: $.trim($("#wonderplugin-dialog-image-alt").val()) };
                                        $slideDialog.remove(); onlineVideoDialog(dialogType, function (items) { items.map(function (data) { addMediaToList({ type: dialogType, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink, linktarget: data.linktarget }) }); updateMediaTable() }, videoData, true, dataIndex)
                                    }); var media_upload_onclick = function (event) {
                                        event.preventDefault();
                                        var buttonId = $(this).attr("id"); var textId = $(this).data("textid"); var library_title = buttonId == "wonderplugin-dialog-select-image" || buttonId == "wonderplugin-dialog-select-thumbnail" ? "Add Image" : "Add Video"; var library_type = buttonId == "wonderplugin-dialog-select-image" || buttonId == "wonderplugin-dialog-select-thumbnail" ? "image" : "video"; var media_uploader = wp.media.frames.file_frame = wp.media({ title: library_title, library: { type: library_type }, button: { text: library_title }, multiple: dialogType == 0 && buttonId == "wonderplugin-dialog-select-image" });
                                        media_uploader.on("select", function (event) {
                                            var selection = media_uploader.state().get("selection"); if (dialogType == 0 && buttonId == "wonderplugin-dialog-select-image" && selection.length > 1) {
                                                var items = []; selection.map(function (attachment) {
                                                    attachment = attachment.toJSON(); if (attachment.type != "image") return; var thumbnail; if (attachment.sizes && attachment.sizes.thumbnail && attachment.sizes.thumbnail.url) thumbnail = attachment.sizes.thumbnail.url; else if (attachment.sizes && attachment.sizes.medium && attachment.sizes.medium.url) thumbnail =
                                                        attachment.sizes.medium.url; else thumbnail = attachment.url; items.push({ image: attachment.url, thumbnail: thumbnail, title: attachment.title, description: attachment.description, altusetitle: true, alt: "", weblink: "", linktarget: "" })
                                                }); $slideDialog.remove(); onSuccess(items)
                                            } else {
                                                attachment = selection.first().toJSON(); if (buttonId == "wonderplugin-dialog-select-image") {
                                                    if (attachment.type != "image") { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select an image file</p>"); return } var thumbnail;
                                                    if (attachment.sizes && attachment.sizes.thumbnail && attachment.sizes.thumbnail.url) thumbnail = attachment.sizes.thumbnail.url; else if (attachment.sizes && attachment.sizes.medium && attachment.sizes.medium.url) thumbnail = attachment.sizes.medium.url; else thumbnail = attachment.url; $("#wonderplugin-dialog-image-display-tr").css({ display: "table-row" }); $("#wonderplugin-dialog-image-display").attr("src", attachment.url); $("#wonderplugin-dialog-image").val(attachment.url); $("#wonderplugin-dialog-thumbnail").val(thumbnail);
                                                    $("#wonderplugin-dialog-image-title").val(attachment.title); $("#wonderplugin-dialog-image-description").val(attachment.description)
                                                } else if (buttonId == "wonderplugin-dialog-select-thumbnail") { if (attachment.type != "image") { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select an image file</p>"); return } $("#wonderplugin-dialog-thumbnail").val(attachment.url) } else {
                                                    if (attachment.type != "video") {
                                                        $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select a video file</p>");
                                                        return
                                                    } $("#" + textId).val(attachment.url)
                                                }
                                            } $("#wonderplugin-dialog-error").css({ display: "none" }).empty()
                                        }); media_uploader.open()
                                    }; if (parseInt($("#video-tv-slide-wp-history-media-uploader").text()) == 1) {
                                        var buttonId = ""; var textId = ""; var history_media_upload_onclick = function (event) {
                                            buttonId = $(this).attr("id"); textId = $(this).data("textid"); var mediaType = buttonId == "wonderplugin-dialog-select-image" || buttonId == "wonderplugin-dialog-select-thumbnail" ? "image" : "video"; tb_show("Upload " + mediaType, "media-upload.php?referer=video-tv-slide&type=" +
                                                mediaType + "&TB_iframe=true", false); return false
                                        }; window.send_to_editor = function (html) {
                                            tb_remove(); if (buttonId == "wonderplugin-dialog-select-image") {
                                                var $img = $("img", html); if (!$img.length) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select an image file</p>"); return } var thumbnail = $img.attr("src"); var src = $(html).is("a") ? $(html).attr("href") : thumbnail; $("#wonderplugin-dialog-image-display-tr").css({ display: "table-row" }); $("#wonderplugin-dialog-image-display").attr("src", thumbnail);
                                                $("#wonderplugin-dialog-image").val(src); $("#wonderplugin-dialog-thumbnail").val(thumbnail); $("#wonderplugin-dialog-image-title").val($("img", html).attr("title"))
                                            } else if (buttonId == "wonderplugin-dialog-select-thumbnail") { var $img = $("img", html); if (!$img.length) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select an image file</p>"); return } var thumbnail = $img.attr("src"); var src = $(html).is("a") ? $(html).attr("href") : thumbnail; $("#wonderplugin-dialog-thumbnail").val(src) } else {
                                                if ($("img",
                                                    html).length) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select a video file</p>"); return } $("#" + textId).val($(html).attr("href"))
                                            } $("#wonderplugin-dialog-error").css({ display: "none" }).empty()
                                        }; $("#wonderplugin-dialog-select-image").click(history_media_upload_onclick); $("#wonderplugin-dialog-select-thumbnail").click(history_media_upload_onclick); if (dialogType == 1) {
                                            $("#wonderplugin-dialog-select-mp4").click(history_media_upload_onclick); $("#wonderplugin-dialog-select-hdmp4").click(history_media_upload_onclick);
                                            $("#wonderplugin-dialog-select-webm").click(history_media_upload_onclick); $("#wonderplugin-dialog-select-hdwebm").click(history_media_upload_onclick)
                                        }
                                    } else {
                                        $("#wonderplugin-dialog-select-image").click(media_upload_onclick); $("#wonderplugin-dialog-select-thumbnail").click(media_upload_onclick); if (dialogType == 1) {
                                            $("#wonderplugin-dialog-select-mp4").click(media_upload_onclick); $("#wonderplugin-dialog-select-hdmp4").click(media_upload_onclick); $("#wonderplugin-dialog-select-webm").click(media_upload_onclick);
                                            $("#wonderplugin-dialog-select-hdwebm").click(media_upload_onclick)
                                        }
            } $("#wonderplugin-dialog-ok").click(function () {
                if ($.trim($("#wonderplugin-dialog-image").val()).length <= 0) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select an image file</p>"); $("#wonderplugin-dialog-image").focus(); return } if (dialogType == 1 && $.trim($("#wonderplugin-dialog-mp4").val()).length <= 0) {
                    $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select a video file</p>"); $("#wonderplugin-dialog-mp4").focus();
                    return
                } var item = {
                    image: $.trim($("#wonderplugin-dialog-image").val()), thumbnail: $.trim($("#wonderplugin-dialog-thumbnail").val()), video: $.trim($("#wonderplugin-dialog-video").val()), mp4: $.trim($("#wonderplugin-dialog-mp4").val()), hdmp4: $.trim($("#wonderplugin-dialog-hdmp4").val()), webm: $.trim($("#wonderplugin-dialog-webm").val()), hdwebm: $.trim($("#wonderplugin-dialog-hdwebm").val()), title: $.trim($("#wonderplugin-dialog-image-title").val()), description: $.trim($("#wonderplugin-dialog-image-description").val()),
                    altusetitle: $("#wonderplugin-dialog-image-altusetitle").is(":checked"), alt: $.trim($("#wonderplugin-dialog-image-alt").val()), weblink: $.trim($("#wonderplugin-dialog-weblink").val()), linktarget: $.trim($("#wonderplugin-dialog-linktarget").val())
                }; $slideDialog.remove(); onSuccess([item])
            }); $("#wonderplugin-dialog-cancel").click(function () { $slideDialog.remove() })
        }; var youtubePlaylistDialog = function (onSuccess, data, dataIndex) {
            var dialogCode = "<div class='wonderplugin-dialog-container'>" + "<div class='wonderplugin-dialog-bg'></div>" +
                "<div class='wonderplugin-dialog'>" + "<h3 id='wonderplugin-dialog-title'>Add YouTube Playlist</h3>" + "<div class='error' id='wonderplugin-dialog-error' style='display:none;'></div>" + "<table id='wonderplugin-dialog-form'>" + "<tr>" + "<th>YouTube API key</th>" + "<td><input name='wonderplugin-dialog-youtubeapikey' type='text' id='wonderplugin-dialog-youtubeapikey' value='' class='regular-text' /></td>" + "</tr>" + "<tr>" + "<th>YouTube playlist ID</th>" + "<td><input name='wonderplugin-dialog-youtubeplaylistid' type='text' id='wonderplugin-dialog-youtubeplaylistid' value='' class='regular-text' /></td>" +
                "</tr>" + "<tr>" + "<th>Maximum results</th>" + "<td><input name='wonderplugin-dialog-youtubeplaylistmaxresults' type='number' id='wonderplugin-dialog-youtubeplaylistmaxresults' value='50' class='small-text' /></td>" + "</tr>" + "</table>" + "<p style='margin-left:12px;text-align:left;'><a href='https://www.wonderplugin.com/youtube-api-key-and-playlist-id/' target='_blank'>Tutorial: How to apply for a YouTube API key and how to find your YouTube playlist ID</a></p>" + "<div class='wonderplugin-dialog-buttons'>" +
                "<input type='button' class='button button-primary' id='wonderplugin-dialog-ok' value='OK' />" + "<input type='button' class='button' id='wonderplugin-dialog-cancel' value='Cancel' />" + "</div>" + "</div>" + "</div>"; var $playlistDialog = $(dialogCode); $("body").append($playlistDialog); $(".wonderplugin-dialog").css({ "margin-top": String($(document).scrollTop() + 60) + "px" }); $(".wonderplugin-dialog-bg").css({ height: $(document).height() + "px" }); if (data) {
                    $("#wonderplugin-dialog-youtubeapikey").val(data.youtubeapikey);
                    $("#wonderplugin-dialog-youtubeplaylistid").val(data.youtubeplaylistid); $("#wonderplugin-dialog-youtubeplaylistmaxresults").val(data.youtubeplaylistmaxresults)
                } $("#wonderplugin-dialog-ok").click(function () {
                    if ($.trim($("#wonderplugin-dialog-youtubeapikey").val()).length <= 0) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please enter your YouTube API key</p>"); $("#wonderplugin-dialog-youtubeapikey").focus(); return } if ($.trim($("#wonderplugin-dialog-youtubeplaylistid").val()).length <=
                        0) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please enter your YouTube playlist ID</p>"); $("#wonderplugin-dialog-youtubeplaylistid").focus(); return } var item = { youtubeapikey: $.trim($("#wonderplugin-dialog-youtubeapikey").val()), youtubeplaylistid: $.trim($("#wonderplugin-dialog-youtubeplaylistid").val()), youtubeplaylistmaxresults: $.trim($("#wonderplugin-dialog-youtubeplaylistmaxresults").val()) }; $playlistDialog.remove(); onSuccess([item])
                }); $("#wonderplugin-dialog-cancel").click(function () { $playlistDialog.remove() })
        };
        var onlineVideoDialog = function (dialogType, onSuccess, videoData, invokeFromSlideDialog, dataIndex) {
            var dialogTitle = ["Image", "Video", "Youtube Video", "Vimeo Video", "Dailymotion Video"]; var dialogExample = ["", "", "https://www.youtube.com/watch?v=wswxQ3mhwqQ", "https://vimeo.com/147079122", "https://www.dailymotion.com/embed/video/x1yj6t9 or https://dai.ly/x1yj6t9"]; var dialogCode = "<div class='wonderplugin-dialog-container'>" + "<div class='wonderplugin-dialog-bg'></div>" + "<div class='wonderplugin-dialog'>" + "<h3 id='wonderplugin-dialog-title'></h3>" +
                "<div class='error' id='wonderplugin-dialog-error' style='display:none;'></div>" + "<table id='wonderplugin-dialog-form'>" + "<tr>" + "<th>" + dialogTitle[dialogType] + " URL</th>" + "<td><input name='wonderplugin-dialog-video' type='text' id='wonderplugin-dialog-video' value='' class='regular-text' />" + "<p>URL Example: " + dialogExample[dialogType] + "<p>" + "</td>" + "</tr>"; dialogCode += "</table>" + "<div id='video-tv-slide-video-dialog-loading'></div>" + "<div class='wonderplugin-dialog-buttons'>" + "<input type='button' class='button button-primary' id='wonderplugin-dialog-ok' value='OK' />" +
                    "<input type='button' class='button' id='wonderplugin-dialog-cancel' value='Cancel' />" + "</div>" + "</div>" + "</div>"; var $videoDialog = $(dialogCode); $("body").append($videoDialog); $(".wonderplugin-dialog").css({ "margin-top": String($(document).scrollTop() + 60) + "px" }); $(".wonderplugin-dialog-bg").css({ height: $(document).height() + "px" }); if (!videoData) videoData = { type: dialogType }; $("#wonderplugin-dialog-title").html("Add " + dialogTitle[dialogType]); var videoDataReturn = function () {
                        $videoDialog.remove(); slideDialog(dialogType,
                            function (items) {
                                if (items && items.length > 0) {
                                    if (typeof dataIndex !== "undefined" && dataIndex >= 0) video_tv_slide_config.slides.splice(dataIndex, 1); items.map(function (data) {
                                        var result = { type: dialogType, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink, linktarget: data.linktarget }; if (typeof dataIndex !==
                                            "undefined" && dataIndex >= 0) video_tv_slide_config.slides.splice(dataIndex, 0, result); else addMediaToList(result)
                                    }); updateMediaTable()
                                }
                            }, videoData, dataIndex)
                    }; $("#wonderplugin-dialog-ok").click(function () {
                        var href = $.trim($("#wonderplugin-dialog-video").val()); if (href.length <= 0) { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please enter a " + dialogTitle[dialogType] + " URL</p>"); return } var protocol = "https:"; if (dialogType == 2) {
                            var youtubeId = ""; var regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/;
                            var match = href.match(regExp); if (match && match[7] && match[7].length == 11) youtubeId = match[7]; else { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please enter a valid Youtube URL</p>"); return } var result = protocol + "//www.youtube.com/embed/" + youtubeId; var params = getURLParams(href); var first = true; for (var key in params) { if (first) { result += "?"; first = false } else result += "&"; result += key + "=" + params[key] } videoData.video = result; videoData.image = protocol + "//img.youtube.com/vi/" + youtubeId + "/0.jpg"; videoData.thumbnail =
                                protocol + "//img.youtube.com/vi/" + youtubeId + "/0.jpg"; videoDataReturn()
                        } else if (dialogType == 3) {
                            var vimeoId = ""; var regExp = /^.*(vimeo\.com\/)((video\/)|(channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/; var match = href.match(regExp); if (match && match[6]) vimeoId = match[6]; else { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please enter a valid Vimeo URL</p>"); return } var result = protocol + "//player.vimeo.com/video/" + vimeoId; var params = getURLParams(href); var first = true; for (var key in params) {
                                if (first) {
                                    result +=
                                    "?"; first = false
                                } else result += "&"; result += key + "=" + params[key]
                            } videoData.video = result; $("#video-tv-slide-video-dialog-loading").css({ display: "block" }); $.ajax({ url: protocol + "//www.vimeo.com/api/v2/video/" + vimeoId + ".json?callback=?", dataType: "json", timeout: 3E3, data: { format: "json" }, success: function (data) { videoData.image = data[0].thumbnail_large; videoData.thumbnail = data[0].thumbnail_medium; videoDataReturn() }, error: function () { videoDataReturn() } })
                        } else if (dialogType == 4) {
                            var dailymotionId = ""; if (href.match(/\:\/\/.*(dai\.ly)/i)) dailymotionId =
                                href.match(/(dai\.ly\/)([a-zA-Z0-9\-\_]+)/)[2]; else if (href.match(/dailymotion\.com\/embed\/video\//i)) dailymotionId = href.match(/(dailymotion\.com\/embed\/video\/)([a-zA-Z0-9\-\_]+)/)[2]; else { $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please enter a valid Dailymotion URL</p>"); return } var result = protocol + "//www.dailymotion.com/embed/video/" + dailymotionId; var params = getURLParams(href); var first = true; for (var key in params) {
                                    if (first) { result += "?"; first = false } else result += "&"; result +=
                                        key + "=" + params[key]
                                } videoData.video = result; videoData.image = protocol + "//www.dailymotion.com/thumbnail/video/" + dailymotionId; videoData.thumbnail = protocol + "//www.dailymotion.com/thumbnail/video/" + dailymotionId; videoDataReturn()
                        }
                    }); $("#wonderplugin-dialog-cancel").click(function () { $videoDialog.remove(); if (invokeFromSlideDialog) videoDataReturn() })
        }; var updateMediaTable = function () {
            var mediaType = ["Image", "Video", "YouTube", "Vimeo", "Dailymotion", "Iframe Video", "WordPress Posts", "", "", "", "YouTube Playlist",
                "Import Folder"]; $("#video-tv-slide-media-table").empty(); for (var i = 0; i < video_tv_slide_config.slides.length; i++) {
                    var thumbnail = ""; if (video_tv_slide_config.slides[i].type == 6) thumbnail = $("#video-tv-slide-pluginfolder").text() + "images/wordpressposts.png"; else if (video_tv_slide_config.slides[i].type == 10) thumbnail = $("#video-tv-slide-pluginfolder").text() + "images/youtubeplaylist.png"; else if (video_tv_slide_config.slides[i].type == 11) thumbnail = $("#video-tv-slide-pluginfolder").text() +
                        "images/importfolder.png"; else thumbnail = video_tv_slide_config.slides[i].thumbnail; $("#video-tv-slide-media-table").append("<li>" + "<div class='video-tv-slide-media-table-id'>" + (i + 1) + "</div>" + "<div class='video-tv-slide-media-table-img'>" + "<img class='video-tv-slide-media-table-image' data-order='" + i + "' src='" + thumbnail + "' />" + "</div>" + "<div class='video-tv-slide-media-table-type'>" + mediaType[video_tv_slide_config.slides[i].type] + "</div>" + "<div class='video-tv-slide-media-table-buttons-edit'>" +
                            "<a class='video-tv-slide-media-table-button video-tv-slide-media-table-edit'>Edit</a>&nbsp;|&nbsp;" + "<a class='video-tv-slide-media-table-button video-tv-slide-media-table-delete'>Delete</a>" + "</div>" + "<div class='video-tv-slide-media-table-buttons-move'>" + "<a class='video-tv-slide-media-table-button video-tv-slide-media-table-moveup'>Move Up</a>&nbsp;|&nbsp;" + "<a class='video-tv-slide-media-table-button video-tv-slide-media-table-movedown'>Move Down</a>" +
                            "</div>" + "<div style='clear:both;'></div>" + "</li>")
                } $(".video-tv-slide-media-table-image").wpdraggable(wonderPluginMediaTableMove)
        }; $("#wonderplugin-add-image").click(function () {
            slideDialog(0, function (items) {
                items.map(function (data) {
                    addMediaToList({
                        type: 0, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink,
                        linktarget: data.linktarget
                    })
                }); updateMediaTable()
            })
        }); $("#wonderplugin-add-video").click(function () { slideDialog(1, function (items) { items.map(function (data) { addMediaToList({ type: 1, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink, linktarget: data.linktarget }) }); updateMediaTable() }) }); $("#wonderplugin-add-youtube").click(function () {
            onlineVideoDialog(2,
                function (items) { items.map(function (data) { addMediaToList({ type: 2, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink, linktarget: data.linktarget }) }); updateMediaTable() })
        }); $("#wonderplugin-add-youtube-playlist").click(function () {
            youtubePlaylistDialog(function (items) {
                items.map(function (data) {
                    addMediaToList({
                        type: 10,
                        youtubeapikey: data.youtubeapikey, youtubeplaylistid: data.youtubeplaylistid, youtubeplaylistmaxresults: data.youtubeplaylistmaxresults
                    })
                }); updateMediaTable()
            })
        }); $("#wonderplugin-add-vimeo").click(function () {
            onlineVideoDialog(3, function (items) {
                items.map(function (data) {
                    addMediaToList({
                        type: 3, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle,
                        alt: data.alt, weblink: data.weblink, linktarget: data.linktarget
                    })
                }); updateMediaTable()
            })
        }); $("#wonderplugin-add-dailymotion").click(function () {
            onlineVideoDialog(4, function (items) {
                items.map(function (data) { addMediaToList({ type: 4, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink, linktarget: data.linktarget }) });
                updateMediaTable()
            })
        }); $("#wonderplugin-add-iframevideo").click(function () { slideDialog(5, function (items) { items.map(function (data) { addMediaToList({ type: 5, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt }) }); updateMediaTable() }) }); $("#wonderplugin-reverselist").click(function () { video_tv_slide_config.slides.reverse(); updateMediaTable() }); var addPostsDialog = function (dialogType,
            onSuccess, data, dataIndex) {
                var dialogCode = "<div class='wonderplugin-dialog-container'>" + "<div class='wonderplugin-dialog-bg'></div>" + "<div class='wonderplugin-dialog'>" + "<h3 id='wonderplugin-dialog-title'>Add Posts</h3>" + "<div class='error' id='wonderplugin-dialog-error' style='display:none;'></div>" + "<table id='wonderplugin-dialog-form'>" + "<tr>" + "<th>Select Posts</th><td><select name='wonderplugin-dialog-postcategory' id='wonderplugin-dialog-postcategory'>"; var catlist = $.parseJSON($("#video-tv-slide-catlist").text());
            dialogCode += "<option value='-1'>Recent Posts</option>"; for (var key in catlist) dialogCode += "<option value='" + catlist[key].ID + "'>Category: " + catlist[key].cat_name + "</option>"; dialogCode += "</select></td></tr>"; dialogCode += "<tr><th>Maximum Posts</th><td><input name='wonderplugin-dialog-postnumber' id='wonderplugin-dialog-postnumber' type='number' value='10' class='small-text' /></td></tr>"; dialogCode += "<tr><th>Thumbnail Image Size</th><td><select name='wonderplugin-dialog-featuredimagesize' id='wonderplugin-dialog-featuredimagesize'><option value='thumbnail'>Thumbnail</option><option value='medium'>Medium</option><option value='large'>Large</option><option value='full'>Full</option></select></td>";
            dialogCode += "<tr><th>Maximum Excerpt Word Length</th><td><input name='wonderplugin-dialog-excerptlength' id='wonderplugin-dialog-excerptlength' type='number' value='55' class='small-text' /></td></tr>"; dialogCode += "<tr><th>Link Target</th><td><div class='select-editable'><select onchange='this.nextElementSibling.value=this.value'><option value=''></option><option value='_blank'>_blank</option><option value='_self'>_self</option><option value='_parent'>_parent</option><option value='_top'>_top</option></select><input type='text' name='wonderplugin-dialog-postlinktarget' id='wonderplugin-dialog-postlinktarget' value='' /></div></td></tr>";
            dialogCode += "<tr><th>Title</th><td><label><input name='wonderplugin-dialog-titlelink' type='checkbox' id='wonderplugin-dialog-titlelink' value='' /> Link title to the post page</label></td></tr>"; dialogCode += "</table>" + "<ul style='margin-left:24px;list-style-position:outside;list-style-type:square;text-align:left;'><li>The featured image of a post will be used as the image of the gallery item. For how to define featured images for posts, please view <a href='https://codex.wordpress.org/Post_Thumbnails' target='_blank'>WordPress Featured Images</a>.</li>" +
                "<li>The title of a post will be used as the title property of the gallery item.</li>" + "<li>The excerpt of a post will be used as the description property of the gallery item. For how to add excerpts for posts, please view <a href='https://codex.wordpress.org/Excerpt' target='_blank'>WordPress Excerpts</a>.</li></ul>" + "<div class='wonderplugin-dialog-buttons'>" + "<input type='button' class='button button-primary' id='wonderplugin-dialog-ok' value='OK' />" + "<input type='button' class='button' id='wonderplugin-dialog-cancel' value='Cancel' />" +
                "</div>" + "</div>" + "</div>"; var $postsDialog = $(dialogCode); $("body").append($postsDialog); $(".wonderplugin-dialog").css({ "margin-top": String($(document).scrollTop() + 60) + "px" }); $(".wonderplugin-dialog-bg").css({ height: $(document).height() + "px" }); if (data) {
                    $("#wonderplugin-dialog-postcategory").val(data.postcategory); $("#wonderplugin-dialog-postnumber").val(data.postnumber); $("#wonderplugin-dialog-featuredimagesize").val(data.featuredimagesize); $("#wonderplugin-dialog-excerptlength").val(data.excerptlength);
                    $("#wonderplugin-dialog-postlinktarget").val(data.postlinktarget); if ("posttitlelink" in data) $("#wonderplugin-dialog-titlelink").attr("checked", data.posttitlelink)
                } $("#wonderplugin-dialog-ok").click(function () {
                    var item = {
                        type: dialogType, postcategory: $("#wonderplugin-dialog-postcategory").val(), postnumber: $("#wonderplugin-dialog-postnumber").val(), featuredimagesize: $("#wonderplugin-dialog-featuredimagesize").val(), excerptlength: $("#wonderplugin-dialog-excerptlength").val(), postlinktarget: $("#wonderplugin-dialog-postlinktarget").val(),
                        posttitlelink: $("#wonderplugin-dialog-titlelink").is(":checked")
                    }; $postsDialog.remove(); onSuccess(item)
                }); $("#wonderplugin-dialog-cancel").click(function () { $postsDialog.remove() })
        }; $("#wonderplugin-add-posts").click(function () { addPostsDialog(6, function (data) { addMediaToList(data); updateMediaTable() }) }); var addFolderDialog = function (dialogType, onSuccess, data, dataIndex) {
            var dialogCode = "<div class='wonderplugin-dialog-container wonderplugin-dialog-container-fixed'>" + "<div class='wonderplugin-dialog-bg'></div>" +
                "<div class='wonderplugin-dialog'>" + "<h3 id='wonderplugin-dialog-title'>Import Folder</h3>" + "<div class='error' id='wonderplugin-dialog-error' style='display:none;'></div>"; dialogCode += '<ul class="wonderplugin-dialog-tab-buttons" data-panelsid="wonderplugin-dialog-tab-panels-content">' + '<li class="wonderplugin-dialog-tab-button wonderplugin-dialog-tab-button-selected">Select a Folder</li>' + '<li class="wonderplugin-dialog-tab-button">Options</li>' + "</ul>"; dialogCode += '<ul class="wonderplugin-dialog-tab-panels" id="wonderplugin-dialog-tab-panels-content">' +
                    '<li class="wonderplugin-dialog-tab-panel wonderplugin-dialog-tab-panel-selected">'; dialogCode += "<p style='text-align:left;'><span style='font-weight:bold;'>Selected Folder</span>: <span id='wonderplugin-folder-selected'></span></p>"; dialogCode += "<div id='wonderplugin-folder-tree'></div>"; dialogCode += '</li><li class="wonderplugin-dialog-tab-panel">'; dialogCode += '<table id="wonderplugin-dialog-form">'; dialogCode += '<tr><th>Sorting order</th><td><select name="wonderplugin-dialog-sortorder" id="wonderplugin-dialog-sortorder"><option value="ASC">Ascending</option><option value="DESC">Descending</option></select></td>';
            dialogCode += '<tr><th>Image extensions</th><td><input name="wonderplugin-dialog-imageext" id="wonderplugin-dialog-imageext" type="text" value="jpg|jpeg|gif|png" class="large-text" /></td></tr>'; dialogCode += '<tr><th>Video extensions</th><td><input name="wonderplugin-dialog-videoext" id="wonderplugin-dialog-videoext" type="text" value="mp4|m4v" class="large-text" /></td></tr>'; dialogCode += '<tr><th>Thumbnail suffix</th><td><input name="wonderplugin-dialog-thumbname" id="wonderplugin-dialog-thumbname" type="text" value="-thumb" class="large-text" /></td></tr>';
            dialogCode += '<tr><th>Poster suffix</th><td><input name="wonderplugin-dialog-postername" id="wonderplugin-dialog-postername" type="text" value="-poster" class="large-text" /></td></tr>'; dialogCode += '<tr><th></th><td><p class="wonderplugin-dialog-help">* If myimage.jpg and myimage-thumb.jpg are found in the folder, myimage-thumb.jpg will be used as the thumbnail of the image.</p><p class="wonderplugin-dialog-help">* If myvideo.mp4, myvideo-thumb.jpg and myvideo-poster.jpg are found in the folder, myvideo-thumb.jpg will be used as the thumbnail, myvideo-poster.jpg will be used as the poster image.</p></td></tr>';
            dialogCode += '<tr><th>Title</th><td><label><input name="wonderplugin-dialog-usefilenameastitle" type="checkbox" id="wonderplugin-dialog-usefilenameastitle" value="" /> Use filename for title</label></td></tr>'; dialogCode += "</table>"; dialogCode += "</li></ul>"; dialogCode += "<div class='wonderplugin-dialog-buttons'>" + "<input type='button' class='button button-primary' id='wonderplugin-dialog-ok' value='OK' />" + "<input type='button' class='button' id='wonderplugin-dialog-cancel' value='Cancel' />" + "</div>" +
                "</div>" + "</div>"; var $folderDialog = $(dialogCode); $("body").append($folderDialog); $(".wonderplugin-dialog").css({ "margin-top": "60px" }); $(".wonderplugin-dialog-bg").css({ height: $(document).height() + "px" }); var folderlist = $.parseJSON($("#video-tv-slide-folderlist").text()); if (folderlist == -1) $("#wonderplugin-folder-tree").html("No permissions to browse folders."); else if (folderlist && folderlist.length > 0) {
                    var foldercode = "<ul class='wonderplugin-foldername-list'>"; for (var i = 0; i < folderlist.length; i++)foldercode +=
                        "<li class='wonderplugin-foldername-item wonderplugin-folder'><a class='wonderplugin-foldername' href='#' data-foldername='" + folderlist[i] + "'>" + folderlist[i] + "</a></li>"; foldercode += "</ul>"; $("#wonderplugin-folder-tree").html(foldercode)
                } if (data) {
                    $("#wonderplugin-folder-selected").text(data.folder); $("#wonderplugin-dialog-sortorder").val(data.sortorder); $("#wonderplugin-dialog-imageext").val(data.imageext); $("#wonderplugin-dialog-videoext").val(data.videoext); $("#wonderplugin-dialog-thumbname").val(data.thumbname);
                    $("#wonderplugin-dialog-postername").val(data.postername); $("#wonderplugin-dialog-usefilenameastitle").attr("checked", data.usefilenameastitle)
                } $("#wonderplugin-dialog-ok").click(function () {
                    var selectedfolder = $.trim($("#wonderplugin-folder-selected").text()); if (!selectedfolder || selectedfolder.length <= 0) $("#wonderplugin-dialog-error").css({ display: "block" }).html("<p>Please select a folder</p>"); var item = {
                        type: dialogType, folder: selectedfolder, sortorder: $("#wonderplugin-dialog-sortorder").val(), imageext: $("#wonderplugin-dialog-imageext").val(),
                        videoext: $("#wonderplugin-dialog-videoext").val(), thumbname: $("#wonderplugin-dialog-thumbname").val(), postername: $("#wonderplugin-dialog-postername").val(), usefilenameastitle: $("#wonderplugin-dialog-usefilenameastitle").is(":checked")
                    }; $folderDialog.remove(); onSuccess(item)
                }); $("#wonderplugin-dialog-cancel").click(function () { $folderDialog.remove() })
        }; $("#wonderplugin-add-folder").click(function () { addFolderDialog(11, function (data) { addMediaToList(data); updateMediaTable() }) }); $(document).on("click",
            ".video-tv-slide-media-table-edit", function () {
                var index = $(this).parent().parent().index(); var mediaType = video_tv_slide_config.slides[index].type; if (mediaType == 10) youtubePlaylistDialog(function (items) {
                    if (items && items.length > 0) {
                        video_tv_slide_config.slides.splice(index, 1); items.map(function (data) { video_tv_slide_config.slides.splice(index, 0, { type: 10, youtubeapikey: data.youtubeapikey, youtubeplaylistid: data.youtubeplaylistid, youtubeplaylistmaxresults: data.youtubeplaylistmaxresults }) });
                        updateMediaTable()
                    }
                }, video_tv_slide_config.slides[index], index); else if (mediaType == 6) addPostsDialog(6, function (data) { video_tv_slide_config.slides.splice(index, 1); video_tv_slide_config.slides.splice(index, 0, data); updateMediaTable() }, video_tv_slide_config.slides[index], index); else if (mediaType == 11) addFolderDialog(11, function (data) { video_tv_slide_config.slides.splice(index, 1); video_tv_slide_config.slides.splice(index, 0, data); updateMediaTable() }, video_tv_slide_config.slides[index],
                    index); else slideDialog(mediaType, function (items) {
                        if (items && items.length > 0) {
                            video_tv_slide_config.slides.splice(index, 1); items.map(function (data) { video_tv_slide_config.slides.splice(index, 0, { type: mediaType, image: data.image, thumbnail: data.thumbnail ? data.thumbnail : data.image, video: data.video, mp4: data.mp4, hdmp4: data.hdmp4, webm: data.webm, hdwebm: data.hdwebm, title: data.title, description: data.description, altusetitle: data.altusetitle, alt: data.alt, weblink: data.weblink, linktarget: data.linktarget }) });
                            updateMediaTable()
                        }
                    }, video_tv_slide_config.slides[index], index)
            }); $(document).on("click", ".video-tv-slide-media-table-delete", function () { var $tr = $(this).parent().parent(); var index = $tr.index(); video_tv_slide_config.slides.splice(index, 1); $tr.remove(); $("#video-tv-slide-media-table").find("li").each(function (index) { $(this).find(".video-tv-slide-media-table-id").text(index + 1); $(this).find("img").data("order", index); $(this).find("img").css({ top: 0, left: 0 }) }) }); var wonderPluginMediaTableMove =
                function (i, j) {
                    var len = video_tv_slide_config.slides.length; if (j < 0) j = 0; if (j > len - 1) j = len - 1; if (i == j) { $("#video-tv-slide-media-table").find("li").eq(i).find("img").css({ top: 0, left: 0 }); return } var $tr = $("#video-tv-slide-media-table").find("li").eq(i); var data = video_tv_slide_config.slides[i]; video_tv_slide_config.slides.splice(i, 1); video_tv_slide_config.slides.splice(j, 0, data); var $trj = $("#video-tv-slide-media-table").find("li").eq(j); $tr.remove(); if (j > i) $trj.after($tr);
                    else $trj.before($tr); $("#video-tv-slide-media-table").find("li").each(function (index) { $(this).find(".video-tv-slide-media-table-id").text(index + 1); $(this).find("img").data("order", index); $(this).find("img").css({ top: 0, left: 0 }) }); $tr.find("img").wpdraggable(wonderPluginMediaTableMove)
                }; $(document).on("click", ".video-tv-slide-media-table-moveup", function () {
                    var $tr = $(this).parent().parent(); var index = $tr.index(); var data = video_tv_slide_config.slides[index]; video_tv_slide_config.slides.splice(index,
                        1); if (index == 0) { video_tv_slide_config.slides.push(data); var $last = $tr.parent().find("li:last"); $tr.remove(); $last.after($tr) } else { video_tv_slide_config.slides.splice(index - 1, 0, data); var $prev = $tr.prev(); $tr.remove(); $prev.before($tr) } $("#video-tv-slide-media-table").find("li").each(function (index) { $(this).find(".video-tv-slide-media-table-id").text(index + 1); $(this).find("img").data("order", index); $(this).find("img").css({ top: 0, left: 0 }) }); $tr.find("img").wpdraggable(wonderPluginMediaTableMove)
                });
        $(document).on("click", ".video-tv-slide-media-table-movedown", function () {
            var $tr = $(this).parent().parent(); var index = $tr.index(); var len = video_tv_slide_config.slides.length; var data = video_tv_slide_config.slides[index]; video_tv_slide_config.slides.splice(index, 1); if (index == len - 1) { video_tv_slide_config.slides.unshift(data); var $first = $tr.parent().find("li:first"); $tr.remove(); $first.before($tr) } else {
                video_tv_slide_config.slides.splice(index + 1, 0, data); var $next = $tr.next();
                $tr.remove(); $next.after($tr)
            } $("#video-tv-slide-media-table").find("li").each(function (index) { $(this).find(".video-tv-slide-media-table-id").text(index + 1); $(this).find("img").data("order", index); $(this).find("img").css({ top: 0, left: 0 }) }); $tr.find("img").wpdraggable(wonderPluginMediaTableMove)
        }); var defaultSkinOptions = {
            gallery: {
                showtitle: true, showdescription: true, titlecss: "{color:#ffffff; font-size:14px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px 10px 10px;  background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}",
                descriptioncss: "{color:#ffffff; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 10px;  background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}", padding: 12, galleryshadow: false, slideshadow: true, bgcolor: "", bgimage: "", thumbwidth: 120, thumbheight: 60, thumbshowtitle: true, thumbshadow: true, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            },
            gallerywithtext: {
                showtitle: true, showdescription: true, titlecss: "{color:#333;font-size:14px;font-family:Armata,sans-serif,Arial;overflow:hidden;text-align:center;padding:16px 8px 4px 8px;}", descriptioncss: "{color:#333;font-size:12px;font-family:Arial,Helvetica,sans-serif;overflow:hidden;text-align:center;padding:4px 8px; }", padding: 12, galleryshadow: false, slideshadow: true, bgcolor: "", bgimage: "", thumbwidth: 120, thumbheight: 60, thumbshowtitle: false, thumbshadow: true, thumbgap: 8, thumbrowgap: 16, titleheight: 72,
                titlesmallscreen: true, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, gallerywithtopthumbs: {
                showtitle: true, showdescription: true, titlecss: "{color:#333;font-size:14px;font-family:Armata,sans-serif,Arial;overflow:hidden;text-align:center;padding:16px 8px 4px 8px;}", descriptioncss: "{color:#333;font-size:12px;font-family:Arial,Helvetica,sans-serif;overflow:hidden;text-align:center;padding:4px 8px; }", padding: 12, galleryshadow: false, slideshadow: true, bgcolor: "", bgimage: "", thumbwidth: 120, thumbheight: 60,
                thumbshowtitle: true, thumbshadow: true, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: true, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, gallerywithtextbottom: {
                showtitle: true, showdescription: true, titlecss: "{color:#333;font-size:14px;font-family:Armata,sans-serif,Arial;overflow:hidden;text-align:center;padding:16px 8px 4px 8px;}", descriptioncss: "{color:#333;font-size:12px;font-family:Arial,Helvetica,sans-serif;overflow:hidden;text-align:center;padding:4px 8px; }", padding: 12, galleryshadow: false,
                slideshadow: true, bgcolor: "", bgimage: "", thumbwidth: 120, thumbheight: 60, thumbshowtitle: true, thumbshadow: true, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: true, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, mediapage: {
                showtitle: true, showdescription: true, titlecss: "{color:#ffffff; font-size:14px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px 10px 10px;  background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}",
                descriptioncss: "{color:#ffffff; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 10px;  background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}", padding: 0, galleryshadow: false, slideshadow: false, bgcolor: "", bgimage: "", thumbwidth: 120, thumbheight: 60, thumbshowtitle: true, thumbshadow: false, thumbgap: 10, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            },
            vertical: {
                showtitle: true, showdescription: false, titlecss: "{color:#ffffff; font-size:16px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px;}", descriptioncss: "{color:#ffffff; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 0px;}", padding: 12, galleryshadow: false, slideshadow: false, bgcolor: "#444444", bgimage: "background.jpg", thumbwidth: 148, thumbheight: 48, thumbshowtitle: true,
                thumbshadow: false, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, verticallight: {
                showtitle: true, showdescription: false, titlecss: "{color:#333; font-size:16px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px;}", descriptioncss: "{color:#333; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 0px;}",
                padding: 12, galleryshadow: false, slideshadow: false, bgcolor: "#fff", bgimage: "", thumbwidth: 148, thumbheight: 48, thumbshowtitle: true, thumbshadow: false, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, horizontal: {
                showtitle: true, showdescription: true, titlecss: "{color:#ffffff; font-size:14px; font-family:Armata, sans-serif, Arial; overflow:hidden; text-align:left; padding:10px 0px 10px 10px; background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}",
                descriptioncss: "{color:#ffffff; font-size:13px; font-family:Armata, sans-serif, Arial; overflow:hidden; text-align:left; padding:0px 0px 10px 10px; background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}", padding: 6, galleryshadow: true, slideshadow: false, bgcolor: "#ffffff", bgimage: "", thumbwidth: 64, thumbheight: 48, thumbshowtitle: false, thumbshadow: false, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, light: {
                showtitle: true,
                showdescription: true, titlecss: "{color:#ffffff; font-size:14px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px 10px 10px;  background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}", descriptioncss: "{color:#ffffff; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 10px;  background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}",
                padding: 12, galleryshadow: false, slideshadow: true, bgcolor: "", bgimage: "", thumbwidth: 48, thumbheight: 48, thumbshowtitle: false, thumbshadow: true, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, showcase: {
                showtitle: true, showdescription: false, titlecss: "{color:#ffffff; font-size:16px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px;}", descriptioncss: "{color:#ffffff; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 0px;}",
                padding: 12, galleryshadow: false, slideshadow: false, bgcolor: "#444444", bgimage: "background.jpg", thumbwidth: 148, thumbheight: 60, thumbshowtitle: true, thumbshadow: false, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }, darkness: {
                showtitle: true, showdescription: false, titlecss: "{color:#ffffff; font-size:16px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:10px 0px;}", descriptioncss: "{color:#ffffff; font-size:12px; font-family:Armata, sans-serif, Arial; overflow:hidden; white-space:normal; text-align:left; padding:0px 0px 10px 0px;}",
                padding: 12, galleryshadow: false, slideshadow: false, bgcolor: "#444444", bgimage: "background.jpg", thumbwidth: 64, thumbheight: 48, thumbshowtitle: false, thumbshadow: false, thumbgap: 8, thumbrowgap: 16, titleheight: 72, titlesmallscreen: false, titlesmallscreenwidth: 640, titleheightsmallscreen: 148
            }
        }; var printSkinOptions = function (options) {
            $("#video-tv-slide-showtitle").attr("checked", options.showtitle); $("#video-tv-slide-showdescription").attr("checked", options.showdescription); $("#video-tv-slide-titlecss").val(options.titlecss);
            $("#video-tv-slide-descriptioncss").val(options.descriptioncss); $("#video-tv-slide-padding").val(options.padding); $("#video-tv-slide-galleryshadow").attr("checked", options.galleryshadow); $("#video-tv-slide-slideshadow").attr("checked", options.slideshadow); $("#video-tv-slide-bgcolor").val(options.bgcolor); $("#video-tv-slide-bgimage").val(options.bgimage); $("#video-tv-slide-thumbwidth").val(options.thumbwidth); $("#video-tv-slide-thumbheight").val(options.thumbheight);
            $("#video-tv-slide-thumbshowtitle").attr("checked", options.thumbshowtitle); $("#video-tv-slide-thumbshadow").attr("checked", options.thumbshadow); $("#video-tv-slide-thumbgap").val(options.thumbgap); $("#video-tv-slide-thumbrowgap").val(options.thumbrowgap); $("#video-tv-slide-titlesmallscreen").attr("checked", options.titlesmallscreen); $("#video-tv-slide-titleheight").val(options.titleheight); $("#video-tv-slide-titlesmallscreenwidth").val(options.titlesmallscreenwidth);
            $("#video-tv-slide-titleheightsmallscreen").val(options.titleheightsmallscreen)
        }; $("input:radio[name=video-tv-slide-skin]").click(function () { if ($(this).val() == video_tv_slide_config.skin) return; $(".wonderplugin-tab-skin").find("img").removeClass("selected"); $("input:radio[name=video-tv-slide-skin]:checked").parent().find("img").addClass("selected"); video_tv_slide_config.skin = $(this).val(); printSkinOptions(defaultSkinOptions[$(this).val()]) }); $(".video-tv-slide-options-menu-item").each(function (index) {
            $(this).click(function () {
                if ($(this).hasClass("video-tv-slide-options-menu-item-selected")) return;
                $(".video-tv-slide-options-menu-item").removeClass("video-tv-slide-options-menu-item-selected"); $(this).addClass("video-tv-slide-options-menu-item-selected"); $(".video-tv-slide-options-tab").removeClass("video-tv-slide-options-tab-selected"); $(".video-tv-slide-options-tab").eq(index).addClass("video-tv-slide-options-tab-selected")
            })
        }); var updateGalleryOptions = function () {
        video_tv_slide_config.newestfirst = $("#wonderplugin-newestfirst").is(":checked");
            video_tv_slide_config.name = $.trim($("#video-tv-slide-name").val()); video_tv_slide_config.width = parseInt($.trim($("#video-tv-slide-width").val())); video_tv_slide_config.height = parseInt($.trim($("#video-tv-slide-height").val())); video_tv_slide_config.skin = $("input:radio[name=video-tv-slide-skin]:checked").val(); video_tv_slide_config.autoplayvideo = $("#video-tv-slide-autoplayvideo").is(":checked"); video_tv_slide_config.html5player = $("#video-tv-slide-html5player").is(":checked");
            video_tv_slide_config.schemamarkup = $("#video-tv-slide-schemamarkup").is(":checked"); video_tv_slide_config.autoslideandplayafterfirstplayed = $("#video-tv-slide-autoslideandplayafterfirstplayed").is(":checked"); video_tv_slide_config.autoslide = $("#video-tv-slide-autoslide").is(":checked"); video_tv_slide_config.slideshowinterval = parseInt($.trim($("#video-tv-slide-slideshowinterval").val())); video_tv_slide_config.responsive = $("#video-tv-slide-responsive").is(":checked");
            video_tv_slide_config.fullwidth = $("#video-tv-slide-fullwidth").is(":checked"); video_tv_slide_config.resizemode = $("#video-tv-slide-resizemode").val(); video_tv_slide_config.imagetoolboxmode = $("#video-tv-slide-imagetoolboxmode").val(); video_tv_slide_config.showtitle = $("#video-tv-slide-showtitle").is(":checked"); video_tv_slide_config.showdescription = $("#video-tv-slide-showdescription").is(":checked"); video_tv_slide_config.titlecss = $.trim($("#video-tv-slide-titlecss").val());
            video_tv_slide_config.descriptioncss = $.trim($("#video-tv-slide-descriptioncss").val()); video_tv_slide_config.showplaybutton = $("#video-tv-slide-showplaybutton").is(":checked"); video_tv_slide_config.showfullscreenbutton = $("#video-tv-slide-showfullscreenbutton").is(":checked"); video_tv_slide_config.showtimer = $("#video-tv-slide-showtimer").is(":checked"); video_tv_slide_config.showcarousel = $("#video-tv-slide-showcarousel").is(":checked"); video_tv_slide_config.googleanalyticsaccount =
                $.trim($("#video-tv-slide-googleanalyticsaccount").val()); video_tv_slide_config.showimgtitle = $("#video-tv-slide-showimgtitle").is(":checked"); video_tv_slide_config.imgtitle = $("#video-tv-slide-imgtitle").val(); video_tv_slide_config.hidetitlewhenvideoisplaying = $("#video-tv-slide-hidetitlewhenvideoisplaying").is(":checked"); video_tv_slide_config.stopallplaying = $("#video-tv-slide-stopallplaying").is(":checked"); video_tv_slide_config.reloadonvideoend =
                    $("#video-tv-slide-reloadonvideoend").is(":checked"); video_tv_slide_config.loadnextonvideoend = $("#video-tv-slide-loadnextonvideoend").is(":checked"); video_tv_slide_config.enabletabindex = $("#video-tv-slide-enabletabindex").is(":checked"); video_tv_slide_config.disablehovereventontouch = $("#video-tv-slide-disablehovereventontouch").is(":checked"); video_tv_slide_config.random = $("#video-tv-slide-random").is(":checked"); video_tv_slide_config.titlesmallscreen =
                        $("#video-tv-slide-titlesmallscreen").is(":checked"); video_tv_slide_config.titleheight = parseInt($.trim($("#video-tv-slide-titleheight").val())); video_tv_slide_config.titlesmallscreenwidth = parseInt($.trim($("#video-tv-slide-titlesmallscreenwidth").val())); video_tv_slide_config.titleheightsmallscreen = parseInt($.trim($("#video-tv-slide-titleheightsmallscreen").val())); video_tv_slide_config.initsocial = $("#video-tv-slide-initsocial").is(":checked");
            video_tv_slide_config.showsocial = $("#video-tv-slide-showsocial").is(":checked"); video_tv_slide_config.socialmode = $.trim($("#video-tv-slide-socialmode").val()); video_tv_slide_config.socialposition = $.trim($("#video-tv-slide-socialposition").val()); video_tv_slide_config.socialpositionlightbox = $.trim($("#video-tv-slide-socialpositionlightbox").val()); video_tv_slide_config.socialdirection = $.trim($("#video-tv-slide-socialdirection").val()); video_tv_slide_config.socialbuttonsize =
                parseInt($.trim($("#video-tv-slide-socialbuttonsize").val())); video_tv_slide_config.socialbuttonfontsize = parseInt($.trim($("#video-tv-slide-socialbuttonfontsize").val())); video_tv_slide_config.socialrotateeffect = $("#video-tv-slide-socialrotateeffect").is(":checked"); video_tv_slide_config.showemail = $("#video-tv-slide-showemail").is(":checked"); video_tv_slide_config.showfacebook = $("#video-tv-slide-showfacebook").is(":checked"); video_tv_slide_config.showtwitter =
                    $("#video-tv-slide-showtwitter").is(":checked"); video_tv_slide_config.showpinterest = $("#video-tv-slide-showpinterest").is(":checked"); video_tv_slide_config.lightboxtextheight = parseInt($.trim($("#video-tv-slide-lightboxtextheight").val())); video_tv_slide_config.lightboxshowtitle = $("#video-tv-slide-lightboxshowtitle").is(":checked"); video_tv_slide_config.lightboxshowdescription = $("#video-tv-slide-lightboxshowdescription").is(":checked"); video_tv_slide_config.lightboxtitlecss =
                        $.trim($("#video-tv-slide-lightboxtitlecss").val()); video_tv_slide_config.lightboxdescriptioncss = $.trim($("#video-tv-slide-lightboxdescriptioncss").val()); video_tv_slide_config.padding = parseInt($.trim($("#video-tv-slide-padding").val())); video_tv_slide_config.galleryshadow = $("#video-tv-slide-galleryshadow").is(":checked"); video_tv_slide_config.slideshadow = $("#video-tv-slide-slideshadow").is(":checked"); video_tv_slide_config.bgcolor = $.trim($("#video-tv-slide-bgcolor").val());
            video_tv_slide_config.bgimage = $.trim($("#video-tv-slide-bgimage").val()); video_tv_slide_config.thumbwidth = parseInt($.trim($("#video-tv-slide-thumbwidth").val())); video_tv_slide_config.thumbheight = parseInt($.trim($("#video-tv-slide-thumbheight").val())); video_tv_slide_config.thumbshowtitle = $("#video-tv-slide-thumbshowtitle").is(":checked"); video_tv_slide_config.thumbshadow = $("#video-tv-slide-thumbshadow").is(":checked"); video_tv_slide_config.thumbgap =
                parseInt($.trim($("#video-tv-slide-thumbgap").val())); video_tv_slide_config.thumbrowgap = parseInt($.trim($("#video-tv-slide-thumbrowgap").val())); video_tv_slide_config.thumbcolumnsresponsive = $("#video-tv-slide-thumbcolumnsresponsive").is(":checked"); video_tv_slide_config.thumbmediumsize = parseInt($.trim($("#video-tv-slide-thumbmediumsize").val())); video_tv_slide_config.thumbsmallsize = parseInt($.trim($("#video-tv-slide-thumbsmallsize").val())); video_tv_slide_config.thumbmediumwidth =
                    parseInt($.trim($("#video-tv-slide-thumbmediumwidth").val())); video_tv_slide_config.thumbmediumheight = parseInt($.trim($("#video-tv-slide-thumbmediumheight").val())); video_tv_slide_config.thumbsmallwidth = parseInt($.trim($("#video-tv-slide-thumbsmallwidth").val())); video_tv_slide_config.thumbsmallheight = parseInt($.trim($("#video-tv-slide-thumbsmallheight").val())); var effects = []; if ($("#video-tv-slide-effect-fade").is(":checked")) effects.push("fade"); if ($("#video-tv-slide-effect-fadeinout").is(":checked")) effects.push("fadeinout");
            if ($("#video-tv-slide-effect-slide").is(":checked")) effects.push("slide"); if ($("#video-tv-slide-effect-crossfade").is(":checked")) effects.push("crossfade"); if (effects.length == 0) effects.push("fade"); video_tv_slide_config.effect = effects.join(","); video_tv_slide_config.duration = parseInt($.trim($("#video-tv-slide-duration").val())); video_tv_slide_config.slideduration = parseInt($.trim($("#video-tv-slide-slideduration").val())); video_tv_slide_config.donotinit =
                $("#video-tv-slide-donotinit").is(":checked"); video_tv_slide_config.addinitscript = $("#video-tv-slide-addinitscript").is(":checked"); video_tv_slide_config.triggerresize = $("#video-tv-slide-triggerresize").is(":checked"); video_tv_slide_config.triggerresizedelay = parseInt($.trim($("#video-tv-slide-triggerresizedelay").val())); video_tv_slide_config.doshortcodeontext = $("#video-tv-slide-doshortcodeontext").is(":checked"); video_tv_slide_config.customcss =
                    $.trim($("#video-tv-slide-custom-css").val()); video_tv_slide_config.dataoptions = $.trim($("#video-tv-slide-data-options").val()); video_tv_slide_config.customjs = $.trim($("#video-tv-slide-customjs").val()); video_tv_slide_config.specifyid = $("#video-tv-slide-specifyid").is(":checked")
        }; var escapeHTMLString = function (str) { return str ? str.replace(/'/g, "&#39;").replace(/"/g, "&quot;") : "" }; var previewGallery = function () {
            updateGalleryOptions(); $("#video-tv-slide-preview-container").empty();
            var previewCode = "<div class='wonderplugingallery' id='video-tv-slide-preview'"; if (video_tv_slide_config.dataoptions && video_tv_slide_config.dataoptions.length > 0) previewCode += " " + video_tv_slide_config.dataoptions; previewCode += "></div>"; $("#video-tv-slide-preview-container").html(previewCode); if (video_tv_slide_config.slides.length > 0) {
                $("head").find("style").each(function () { if ($(this).data("creator") == "html5gallery") $(this).remove() }); if (video_tv_slide_config.customcss &&
                    video_tv_slide_config.customcss.length > 0) { var customid = video_tv_slide_config.id > 0 && video_tv_slide_config.specifyid ? video_tv_slide_config.id : 0; var customcss = video_tv_slide_config.customcss.replace(/GALLERYID/g, customid); $("head").append("<style type='text/css' data-creator='html5gallery'>" + customcss + "</style>") } var hasPosts = false; var hasFolder = false; var code = ""; var count = 0; for (var i = 0; i < video_tv_slide_config.slides.length; i++)if (video_tv_slide_config.slides[i].type ==
                        10) { code += "<a href='#' data-mediatype=13 data-youtubeapikey='" + video_tv_slide_config.slides[i].youtubeapikey + "' data-youtubeplaylistid='" + video_tv_slide_config.slides[i].youtubeplaylistid + "'"; if (video_tv_slide_config.slides[i].youtubeplaylistmaxresults) code += " data-youtubeplaylistmaxresults='" + video_tv_slide_config.slides[i].youtubeplaylistmaxresults + "'"; code += "><img class='html5galleryimg'></a>"; count++ } else if (video_tv_slide_config.slides[i].type == 6) {
                            hasPosts = true;
                            continue
                        } else if (video_tv_slide_config.slides[i].type == 11) { hasFolder = true; continue } else {
                            code += "<a"; if (video_tv_slide_config.slides[i].type == 0) code += " href='" + video_tv_slide_config.slides[i].image + "' data-mediatype=1"; else if (video_tv_slide_config.slides[i].type == 1) {
                                code += " href='" + video_tv_slide_config.slides[i].mp4 + "'"; if (video_tv_slide_config.slides[i].image) code += " data-poster='" + video_tv_slide_config.slides[i].image + "'"; if (video_tv_slide_config.slides[i].hdmp4) code +=
                                    " data-hd='" + video_tv_slide_config.slides[i].mp4 + "'"; if (video_tv_slide_config.slides[i].webm) code += " data-webm='" + video_tv_slide_config.slides[i].webm + "'"; if (video_tv_slide_config.slides[i].hdwebm) code += " data-hdwebm='" + video_tv_slide_config.slides[i].hdwebm + "'"
                            } else if (video_tv_slide_config.slides[i].type == 2 || video_tv_slide_config.slides[i].type == 3 || video_tv_slide_config.slides[i].type == 4 || video_tv_slide_config.slides[i].type == 5) {
                                code += " href='" +
                                video_tv_slide_config.slides[i].video + "'"; if (video_tv_slide_config.slides[i].type == 5) code += " data-mediatype=11"; if (video_tv_slide_config.slides[i].image) code += " data-poster='" + video_tv_slide_config.slides[i].image + "'"
                            } if (video_tv_slide_config.slides[i].weblink && video_tv_slide_config.slides[i].weblink.length > 0) {
                                code += " data-link='" + video_tv_slide_config.slides[i].weblink + "'"; if (video_tv_slide_config.slides[i].linktarget && video_tv_slide_config.slides[i].linktarget.length >
                                    0) code += " data-linktarget='" + video_tv_slide_config.slides[i].linktarget + "'"
                            } code += " >"; code += "<img class='html5galleryimg' src='" + (video_tv_slide_config.showcarousel ? video_tv_slide_config.slides[i].thumbnail : "") + "' alt='" + escapeHTMLString(video_tv_slide_config.slides[i].title) + "' data-description='" + escapeHTMLString(video_tv_slide_config.slides[i].description) + "' />"; code += "</a>"; count++
                        } if (video_tv_slide_config.fullwidth) $("#video-tv-slide-preview-container").css({ "max-width": "100%" });
                else $("#video-tv-slide-preview-container").css({ "max-width": video_tv_slide_config.width + "px" }); $("#video-tv-slide-preview").append(code); if (count > 0) { var jsfolder = $("#video-tv-slide-jsfolder").text(); var paramId = video_tv_slide_config.id > 0 && video_tv_slide_config.specifyid ? video_tv_slide_config.id : 0; $("#video-tv-slide-preview").wonderplugingallery($.extend({}, { galleryid: paramId, jsfolder: jsfolder }, video_tv_slide_config)) } if (hasPosts) $("#video-tv-slide-preview-message").html("The WordPress posts gallery is not available in the Preview tab. To view the effect, save and publish the gallery, then clik the View Gallery link. Or you can add the provided shortcode to a post or page to view the effect.");
                else if (hasFolder) $("#video-tv-slide-preview-message").html("The WordPress folder gallery is not available in the Preview tab. To view the effect, save and publish the gallery, then clik the View Gallery link. Or you can add the provided shortcode to a post or page to view the effect."); else $("#video-tv-slide-preview-message").empty()
            }
        }; var postPublish = function (message) {
            $("#video-tv-slide-publish-loading").hide(); var formnonce = $("#video-tv-slide-saveformnonce").html(); var errorHtml =
                ""; if (message) { errorHtml += "<div class='error'><p>Error message: " + message + "</p></div>"; errorHtml += "<div class='error'><p>WordPress Ajax call failed. Please click the button below and save with POST method</p></div>" } else { errorHtml += "<div class='error'><p>WordPress Ajax call failed. Please check your WordPress configuration file and make sure the WP_DEBUG is set to false.</p></div>"; errorHtml += "<div class='error'><p>Please click the button below and save with POST method</p></div>" } errorHtml += "<form method='post'>";
            errorHtml += formnonce; errorHtml += "<input type='hidden' name='video-tv-slide-save-item-post-value' id='video-tv-slide-save-item-post-value' value='" + JSON.stringify(video_tv_slide_config).replace(/"/g, "&quot;").replace(/'/g, "&#39;") + "' />"; errorHtml += "<p class='submit'><input type='submit' name='video-tv-slide-save-item-post' id='video-tv-slide-save-item-post' class='button button-primary' value='Save & Publish with Post Method'  /></p>"; errorHtml += "</form>"; $("#video-tv-slide-publish-information").html(errorHtml)
        };
        var publishGallery = function () {
            $("#video-tv-slide-publish-loading").show(); updateGalleryOptions(); var ajaxnonce = $("#video-tv-slide-ajaxnonce").text(); jQuery.ajax({
                url: ajaxurl, type: "POST", data: { action: "video_tv_slide_save_config", nonce: ajaxnonce, item: JSON.stringify(video_tv_slide_config) }, success: function (data) {
                    $("#video-tv-slide-publish-loading").hide(); if (data && data.success && data.id >= 0) {
                    video_tv_slide_config.id = data.id; $("#video-tv-slide-publish-information").html("<div class='updated'><p>The gallery has been saved and published: <a href='" +
                        $("#video-tv-slide-viewadminurl").text() + "&itemid=" + data.id + "' target='_blank'>View Gallery</a></p></div>" + "<div class='updated'><p>To embed the gallery into your page or post, use shortcode:  [video_tv_slide id=\"" + data.id + '"]</p></div>' + "<div class='updated'><p>To embed the gallery into your template, use php code:  &lt;?php echo do_shortcode('[video_tv_slide id=\"" + data.id + "\"]'); ?&gt;</p></div>")
                    } else postPublish(data && data.message ? data.message : "")
                }, error: function () {
                    $("#video-tv-slide-publish-loading").hide();
                    postPublish("")
                }
            })
        }; var default_options = {
            id: -1, newestfirst: "false", name: "My Gallery", width: 640, height: 360, slides: [], skin: "gallery", autoplayvideo: "false", html5player: "true", schemamarkup: "false", autoslideandplayafterfirstplayed: "false", hidetitlewhenvideoisplaying: "false", stopallplaying: "false", reloadonvideoend: "false", loadnextonvideoend: "false", enabletabindex: "false", disablehovereventontouch: "false", autoslide: "false", slideshowinterval: 6E3, responsive: "true", fullwidth: "false", random: "false", resizemode: "fill",
            imagetoolboxmode: "mouseover", showtitle: "true", showdescription: "true", titlecss: "{color:#ffffff; font-size:14px; font-family:Armata, sans-serif, Arial; overflow:hidden; text-align:left; padding:10px 0px 10px 10px; background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}", descriptioncss: "{color:#ffffff; font-size:13px; font-family:Armata, sans-serif, Arial; overflow:hidden; text-align:left; padding:0px 0px 10px 10px; background:rgb(102, 102, 102) transparent; background:rgba(102, 102, 102, 0.6);}",
            showplaybutton: "true", showfullscreenbutton: "true", effect: "fade", duration: 1500, slideduration: 1E3, showtimer: "true", showcarousel: "true", googleanalyticsaccount: "", showimgtitle: "false", imgtitle: "title", padding: 12, galleryshadow: "false", slideshadow: "true", bgcolor: "", bgimage: "", thumbwidth: 120, thumbheight: 60, thumbshowtitle: "true", thumbshadow: "true", thumbgap: 8, thumbrowgap: 16, donotinit: false, addinitscript: false, triggerresize: false, triggerresizedelay: 100, doshortcodeontext: false, customcss: "", customjs: "", dataoptions: "",
            lightboxtextheight: 72, lightboxshowtitle: "true", lightboxshowdescription: "true", lightboxtitlecss: "{color:#333333; font:bold 12px Arial,Helvetica,sans-serif; overflow:hidden; white-space:normal; line-height:18px;}", lightboxdescriptioncss: "{color:#333333; font:normal 12px Arial,Helvetica,sans-serif; overflow:hidden; white-space:normal; line-height:14px;}", specifyid: "true", titleheight: 72, titlesmallscreen: "false", titlesmallscreenwidth: 640, titleheightsmallscreen: 148, thumbcolumnsresponsive: "false", thumbmediumsize: 800,
            thumbsmallsize: 480, thumbmediumwidth: 64, thumbmediumheight: 64, thumbsmallwidth: 48, thumbsmallheight: 48, initsocial: "true", showsocial: "false", socialmode: "mouseover", socialposition: "position:absolute;top:8px;right:8px;", socialpositionlightbox: "position:absolute;top:8px;right:8px;", socialdirection: "horizontal", socialbuttonsize: 32, socialbuttonfontsize: 18, socialrotateeffect: "true", showemail: "false", showfacebook: "true", showtwitter: "true", showpinterest: "true"
        }; var video_tv_slide_config = default_options;
        var galleryId = parseInt($("#video-tv-slide-id").text()); if (galleryId >= 0) {
            var config_options = $.parseJSON($("#video-tv-slide-id-config").text()); if ("responsive" in config_options && !("fullwidth" in config_options)) config_options.fullwidth = config_options.responsive; if (!("specifyid" in config_options)) config_options.specifyid = "false"; if (!("titlesmallscreen" in config_options)) config_options.titlesmallscreen = "false"; if ("skin" in config_options && config_options.skin in defaultSkinOptions) $.extend(video_tv_slide_config,
                defaultSkinOptions[config_options.skin]); $.extend(video_tv_slide_config, config_options); video_tv_slide_config.id = galleryId
        } for (var i = 0; i < video_tv_slide_config.slides.length; i++) {
            if (video_tv_slide_config.slides[i].type == 6 || video_tv_slide_config.slides[i].type == 11) continue; if (video_tv_slide_config.slides[i].title) video_tv_slide_config.slides[i].title = video_tv_slide_config.slides[i].title.replace(/\\'/g, "'").replace(/\\"/g, '"'); if (video_tv_slide_config.slides[i].description) video_tv_slide_config.slides[i].description =
                video_tv_slide_config.slides[i].description.replace(/\\'/g, "'").replace(/\\"/g, '"'); if (!("altusetitle" in video_tv_slide_config.slides[i])) video_tv_slide_config.slides[i]["altusetitle"] = true; if (!("alt" in video_tv_slide_config.slides[i])) video_tv_slide_config.slides[i]["alt"] = ""
        } var slideBoolOptions = ["posttitlelink", "altusetitle", "usefilenameastitle"]; for (var i = 0; i < video_tv_slide_config.slides.length; i++)for (var j = 0; j < slideBoolOptions.length; j++)if (video_tv_slide_config.slides[i][slideBoolOptions[j]] !==
            true && video_tv_slide_config.slides[i][slideBoolOptions[j]] !== false) video_tv_slide_config.slides[i][slideBoolOptions[j]] = video_tv_slide_config.slides[i][slideBoolOptions[j]] && video_tv_slide_config.slides[i][slideBoolOptions[j]].toLowerCase() === "true"; var boolOptions = ["newestfirst", "autoslide", "autoplayvideo", "schemamarkup", "stopallplaying", "reloadonvideoend", "enabletabindex", "loadnextonvideoend", "hidetitlewhenvideoisplaying", "disablehovereventontouch", "autoslideandplayafterfirstplayed",
                "html5player", "responsive", "fullwidth", "showtitle", "showdescription", "showplaybutton", "showfullscreenbutton", "showtimer", "showcarousel", "random", "galleryshadow", "slideshadow", "thumbshowtitle", "thumbshadow", "lightboxshowtitle", "lightboxshowdescription", "specifyid", "donotinit", "addinitscript", "titlesmallscreen", "initsocial", "showsocial", "showemail", "showfacebook", "showtwitter", "showpinterest", "socialrotateeffect", "triggerresize", "thumbcolumnsresponsive", "doshortcodeontext", "showimgtitle"]; for (var i =
                    0; i < boolOptions.length; i++)if (video_tv_slide_config[boolOptions[i]] !== true && video_tv_slide_config[boolOptions[i]] !== false) video_tv_slide_config[boolOptions[i]] = video_tv_slide_config[boolOptions[i]] && video_tv_slide_config[boolOptions[i]].toLowerCase() === "true"; if (video_tv_slide_config.dataoptions && video_tv_slide_config.dataoptions.length > 0) video_tv_slide_config.dataoptions = video_tv_slide_config.dataoptions.replace(/\\"/g, '"').replace(/\\'/g, "'");
        var printConfig = function () {
            $("#wonderplugin-newestfirst").attr("checked", video_tv_slide_config.newestfirst); $("#video-tv-slide-name").val(video_tv_slide_config.name); $("#video-tv-slide-width").val(video_tv_slide_config.width); $("#video-tv-slide-height").val(video_tv_slide_config.height); updateMediaTable(); $(".wonderplugin-tab-skin").find("img").removeClass("selected"); $("input:radio[name=video-tv-slide-skin][value=" + video_tv_slide_config.skin +
                "]").attr("checked", true); $("input:radio[name=video-tv-slide-skin][value=" + video_tv_slide_config.skin + "]").parent().find("img").addClass("selected"); $("#video-tv-slide-autoslide").attr("checked", video_tv_slide_config.autoslide); $("#video-tv-slide-slideshowinterval").val(video_tv_slide_config.slideshowinterval); $("#video-tv-slide-autoplayvideo").attr("checked", video_tv_slide_config.autoplayvideo); $("#video-tv-slide-html5player").attr("checked",
                    video_tv_slide_config.html5player); $("#video-tv-slide-schemamarkup").attr("checked", video_tv_slide_config.schemamarkup); $("#video-tv-slide-autoslideandplayafterfirstplayed").attr("checked", video_tv_slide_config.autoslideandplayafterfirstplayed); $("#video-tv-slide-responsive").attr("checked", video_tv_slide_config.responsive); $("#video-tv-slide-fullwidth").attr("checked", video_tv_slide_config.fullwidth); $("#video-tv-slide-resizemode").val(video_tv_slide_config.resizemode);
            $("#video-tv-slide-imagetoolboxmode").val(video_tv_slide_config.imagetoolboxmode); $("#video-tv-slide-showplaybutton").attr("checked", video_tv_slide_config.showplaybutton); $("#video-tv-slide-showfullscreenbutton").attr("checked", video_tv_slide_config.showfullscreenbutton); $("#video-tv-slide-hidetitlewhenvideoisplaying").attr("checked", video_tv_slide_config.hidetitlewhenvideoisplaying); $("#video-tv-slide-stopallplaying").attr("checked", video_tv_slide_config.stopallplaying);
            $("#video-tv-slide-reloadonvideoend").attr("checked", video_tv_slide_config.reloadonvideoend); $("#video-tv-slide-loadnextonvideoend").attr("checked", video_tv_slide_config.loadnextonvideoend); $("#video-tv-slide-enabletabindex").attr("checked", video_tv_slide_config.enabletabindex); $("#video-tv-slide-disablehovereventontouch").attr("checked", video_tv_slide_config.disablehovereventontouch); $("#video-tv-slide-random").attr("checked", video_tv_slide_config.random);
            $("#video-tv-slide-lightboxtextheight").val(video_tv_slide_config.lightboxtextheight); $("#video-tv-slide-lightboxshowtitle").attr("checked", video_tv_slide_config.lightboxshowtitle); $("#video-tv-slide-lightboxshowdescription").attr("checked", video_tv_slide_config.lightboxshowdescription); $("#video-tv-slide-lightboxtitlecss").val(video_tv_slide_config.lightboxtitlecss); $("#video-tv-slide-lightboxdescriptioncss").val(video_tv_slide_config.lightboxdescriptioncss);
            var effects = video_tv_slide_config.effect.split(","); $("#video-tv-slide-effect-fade").attr("checked", effects.indexOf("fade") > -1); $("#video-tv-slide-effect-fadeinout").attr("checked", effects.indexOf("fadeinout") > -1); $("#video-tv-slide-effect-slide").attr("checked", effects.indexOf("slide") > -1); $("#video-tv-slide-effect-crossfade").attr("checked", effects.indexOf("crossfade") > -1); $("#video-tv-slide-duration").val(video_tv_slide_config.duration); $("#video-tv-slide-slideduration").val(video_tv_slide_config.slideduration);
            $("#video-tv-slide-showtimer").attr("checked", video_tv_slide_config.showtimer); $("#video-tv-slide-showcarousel").attr("checked", video_tv_slide_config.showcarousel); $("#video-tv-slide-showimgtitle").attr("checked", video_tv_slide_config.showimgtitle); $("#video-tv-slide-imgtitle").val(video_tv_slide_config.imgtitle); $("#video-tv-slide-googleanalyticsaccount").val(video_tv_slide_config.googleanalyticsaccount); printSkinOptions(video_tv_slide_config);
            $("#video-tv-slide-initsocial").attr("checked", video_tv_slide_config.initsocial); $("#video-tv-slide-showsocial").attr("checked", video_tv_slide_config.showsocial); $("#video-tv-slide-socialmode").val(video_tv_slide_config.socialmode); $("#video-tv-slide-socialposition").val(video_tv_slide_config.socialposition); $("#video-tv-slide-socialpositionlightbox").val(video_tv_slide_config.socialpositionlightbox); $("#video-tv-slide-socialdirection").val(video_tv_slide_config.socialdirection);
            $("#video-tv-slide-socialbuttonsize").val(video_tv_slide_config.socialbuttonsize); $("#video-tv-slide-socialbuttonfontsize").val(video_tv_slide_config.socialbuttonfontsize); $("#video-tv-slide-socialrotateeffect").attr("checked", video_tv_slide_config.socialrotateeffect); $("#video-tv-slide-showemail").attr("checked", video_tv_slide_config.showemail); $("#video-tv-slide-showfacebook").attr("checked", video_tv_slide_config.showfacebook); $("#video-tv-slide-showtwitter").attr("checked",
                video_tv_slide_config.showtwitter); $("#video-tv-slide-showpinterest").attr("checked", video_tv_slide_config.showpinterest); $("#video-tv-slide-thumbcolumnsresponsive").attr("checked", video_tv_slide_config.thumbcolumnsresponsive); $("#video-tv-slide-thumbmediumsize").val(video_tv_slide_config.thumbmediumsize); $("#video-tv-slide-thumbsmallsize").val(video_tv_slide_config.thumbsmallsize); $("#video-tv-slide-thumbmediumwidth").val(video_tv_slide_config.thumbmediumwidth);
            $("#video-tv-slide-thumbmediumheight").val(video_tv_slide_config.thumbmediumheight); $("#video-tv-slide-thumbsmallwidth").val(video_tv_slide_config.thumbsmallwidth); $("#video-tv-slide-thumbsmallheight").val(video_tv_slide_config.thumbsmallheight); $("#video-tv-slide-donotinit").attr("checked", video_tv_slide_config.donotinit); $("#video-tv-slide-addinitscript").attr("checked", video_tv_slide_config.addinitscript); $("#video-tv-slide-triggerresize").attr("checked",
                video_tv_slide_config.triggerresize); $("#video-tv-slide-triggerresizedelay").val(video_tv_slide_config.triggerresizedelay); $("#video-tv-slide-doshortcodeontext").attr("checked", video_tv_slide_config.doshortcodeontext); $("#video-tv-slide-custom-css").val(video_tv_slide_config.customcss); $("#video-tv-slide-data-options").val(video_tv_slide_config.dataoptions); $("#video-tv-slide-customjs").val(video_tv_slide_config.customjs); $("#video-tv-slide-specifyid").attr("checked",
                    video_tv_slide_config.specifyid)
        }; printConfig()
    }); $.fn.wpdraggable = function (callback) {
        this.css("cursor", "move").on("mousedown", function (e) {
            var $dragged = $(this); var x = $dragged.offset().left - e.pageX; var y = $dragged.offset().top - e.pageY; var z = $dragged.css("z-index"); $(document).on("mousemove.wpdraggable", function (e) { $dragged.css({ "z-index": 999 }).offset({ left: x + e.pageX, top: y + e.pageY }); e.preventDefault() }).one("mouseup", function () {
                $(this).off("mousemove.wpdraggable click.wpdraggable"); $dragged.css("z-index",
                    z); var i = $dragged.data("order"); var coltotal = Math.floor($dragged.parent().parent().parent().innerWidth() / $dragged.parent().parent().outerWidth()); var row = Math.floor(($dragged.offset().top - $dragged.parent().parent().parent().offset().top) / $dragged.parent().parent().outerHeight()); var col = Math.floor(($dragged.offset().left - $dragged.parent().parent().parent().offset().left) / $dragged.parent().parent().outerWidth()); var j = row * coltotal + col; callback(i, j)
            }); e.preventDefault()
        }); return this
    }
})(jQuery);
(function ($) {
    $(document).ready(function () {
        var wp_replace_list = new Array({ "search": "", "replace": "" }); init_render(); render_list(); function update_list() { wp_replace_list = new Array; for (var i = 0; ; i++) { if ($("#olddomain" + i).length <= 0) break; wp_replace_list.push({ "search": $.trim($("#olddomain" + i).val()), "replace": $.trim($("#newdomain" + i).val()) }) } } function render_list() {
            var replace_code = ""; for (var i = 0; i < wp_replace_list.length; i++) {
                replace_code += '<p><input type="text" size="40" name="olddomain' + i + '" id="olddomain' +
                i + '" placeholder="Search" value="' + wp_replace_list[i].search + '" >'; replace_code += '<span class="dashicons dashicons-arrow-right-alt" style="margin:0 12px;line-height:inherit;"></span>'; replace_code += '<input type="text" size="40" name="newdomain' + i + '" id="newdomain' + i + '" placeholder="Replace" value="' + wp_replace_list[i].replace + '" >'; replace_code += '<span class="dashicons dashicons-no wp-delete-replace-list" style="margin:0 12px;line-height:inherit;cursor:pointer;" data-listid=' + i + "></span></p>"
            } $("#wp-search-replace").html(replace_code)
        }
        function init_render() {
            $("body").on("click", ".wp-delete-replace-list", function () { update_list(); wp_replace_list.splice($(this).data("listid"), 1); render_list() }); $("#wp-add-replace-list").click(function () { update_list(); wp_replace_list.push({ "search": "", "replace": "" }); render_list(); return false }); $("#wp-import-submit").click(function () {
                if (!$("#wp-importxml").val()) { $("#wp-import-error").show().html("<p>Error: please select an exported .xml file.</p>"); return false } else $("#wp-import-error").hide(); update_list();
                for (var i = 0; i < wp_replace_list.length; i++) { if (wp_replace_list[i].search.length > 0 && wp_replace_list[i].replace.length <= 0) { $("#wp-replace-error").show().html("<p>Error: please enter the new domain or delete the whole row.</p>"); return false } if (wp_replace_list[i].search.length <= 0 && wp_replace_list[i].replace.length > 0) { $("#wp-replace-error").show().html("<p>Error: please enter the old domain or delete the whole row.</p>"); return false } }
            })
        }
    })
})(jQuery);
(function ($) {
    $(document).ready(function () {
        var wp_replace_list = new Array({ "search": "", "replace": "" }); init_render(); render_list(); function update_list() { wp_replace_list = new Array; for (var i = 0; ; i++) { if ($("#standalonesearch" + i).length <= 0) break; wp_replace_list.push({ "search": $.trim($("#standalonesearch" + i).val()), "replace": $.trim($("#standalonereplace" + i).val()) }) } } function render_list() {
            var replace_code = ""; for (var i = 0; i < wp_replace_list.length; i++) {
                replace_code += '<p><input type="text" size="40" name="standalonesearch' +
                i + '" id="standalonesearch' + i + '" placeholder="Search" value="' + wp_replace_list[i].search + '" >'; replace_code += '<span class="dashicons dashicons-arrow-right-alt" style="margin:0 12px;line-height:inherit;"></span>'; replace_code += '<input type="text" size="40" name="standalonereplace' + i + '" id="standalonereplace' + i + '" placeholder="Replace" value="' + wp_replace_list[i].replace + '" >'; replace_code += '<span class="dashicons dashicons-no wp-standalone-delete-replace-list" style="margin:0 12px;line-height:inherit;cursor:pointer;" data-listid=' +
                    i + "></span></p>"
            } $("#wp-standalone-search-replace").html(replace_code)
        } function init_render() {
            $("body").on("click", ".wp-standalone-delete-replace-list", function () { update_list(); wp_replace_list.splice($(this).data("listid"), 1); render_list() }); $("#wp-add-standalone-replace-list").click(function () { update_list(); wp_replace_list.push({ "search": "", "replace": "" }); render_list(); return false }); $("#wp-search-replace-submit").click(function () {
                update_list(); for (var i = 0; i < wp_replace_list.length; i++) {
                    if (wp_replace_list[i].search.length >
                        0 && wp_replace_list[i].replace.length <= 0) { $("#wp-standalone-replace-error").show().html("<p>Error: please enter the string to replace or delete the whole row.</p>"); return false } if (wp_replace_list[i].search.length <= 0 && wp_replace_list[i].replace.length > 0) { $("#wp-standalone-replace-error").show().html("<p>Error: please enter the string to search or delete the whole row.</p>"); return false }
                }
            })
        }
    }); $.wpgalleryCookie = function (key, value, options) {
        if (typeof value !== "undefined") {
            options = $.extend({}, { path: "/" },
                options); if (options.expires) { var seconds = options.expires; options.expires = new Date; options.expires.setTime(options.expires.getTime() + seconds * 1E3) } return document.cookie = key + "=" + encodeURIComponent(value) + (options.expires ? ";expires=" + options.expires.toUTCString() : "") + (options.path ? ";path=" + options.path : "")
        } var result = null; var cookies = document.cookie ? document.cookie.split(";") : []; for (var i in cookies) {
            var parts = $.trim(cookies[i]).split("="); if (parts.length && parts[0] == key) {
                result = decodeURIComponent(parts[1]);
                break
            }
        } return result
    }; $.wpgalleryRemoveCookie = function (key) { return $.wpgalleryCookie(key, "", $.extend({}, { expires: -1 })) }
})(jQuery);
